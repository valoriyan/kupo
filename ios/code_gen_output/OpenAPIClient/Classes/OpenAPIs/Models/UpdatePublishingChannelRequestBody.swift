//
// UpdatePublishingChannelRequestBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpdatePublishingChannelRequestBody: Codable, JSONEncodable, Hashable {

    public var publishingChannelId: String
    public var publishingChannelName: String
    public var publishingChannelDescription: String
    public var updatedExternalUrls: [String]?
    public var updatedPublishingChannelRules: [String]?
    public var moderatorUserIds: [String]

    public init(publishingChannelId: String, publishingChannelName: String, publishingChannelDescription: String, updatedExternalUrls: [String]? = nil, updatedPublishingChannelRules: [String]? = nil, moderatorUserIds: [String]) {
        self.publishingChannelId = publishingChannelId
        self.publishingChannelName = publishingChannelName
        self.publishingChannelDescription = publishingChannelDescription
        self.updatedExternalUrls = updatedExternalUrls
        self.updatedPublishingChannelRules = updatedPublishingChannelRules
        self.moderatorUserIds = moderatorUserIds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case publishingChannelId
        case publishingChannelName
        case publishingChannelDescription
        case updatedExternalUrls
        case updatedPublishingChannelRules
        case moderatorUserIds
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(publishingChannelId, forKey: .publishingChannelId)
        try container.encode(publishingChannelName, forKey: .publishingChannelName)
        try container.encode(publishingChannelDescription, forKey: .publishingChannelDescription)
        try container.encodeIfPresent(updatedExternalUrls, forKey: .updatedExternalUrls)
        try container.encodeIfPresent(updatedPublishingChannelRules, forKey: .updatedPublishingChannelRules)
        try container.encode(moderatorUserIds, forKey: .moderatorUserIds)
    }
}

