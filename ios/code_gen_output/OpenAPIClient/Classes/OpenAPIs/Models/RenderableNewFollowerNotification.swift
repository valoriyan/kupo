//
// RenderableNewFollowerNotification.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RenderableNewFollowerNotification: Codable, JSONEncodable, Hashable {

    public var type: NOTIFICATIONEVENTSNEWFOLLOWER
    public var countOfUnreadNotifications: Double
    public var eventTimestamp: Double
    public var timestampSeenByUser: Double?
    public var userDoingFollowing: RenderableUser

    public init(type: NOTIFICATIONEVENTSNEWFOLLOWER, countOfUnreadNotifications: Double, eventTimestamp: Double, timestampSeenByUser: Double? = nil, userDoingFollowing: RenderableUser) {
        self.type = type
        self.countOfUnreadNotifications = countOfUnreadNotifications
        self.eventTimestamp = eventTimestamp
        self.timestampSeenByUser = timestampSeenByUser
        self.userDoingFollowing = userDoingFollowing
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case countOfUnreadNotifications
        case eventTimestamp
        case timestampSeenByUser
        case userDoingFollowing
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(countOfUnreadNotifications, forKey: .countOfUnreadNotifications)
        try container.encode(eventTimestamp, forKey: .eventTimestamp)
        try container.encodeIfPresent(timestampSeenByUser, forKey: .timestampSeenByUser)
        try container.encode(userDoingFollowing, forKey: .userDoingFollowing)
    }
}

