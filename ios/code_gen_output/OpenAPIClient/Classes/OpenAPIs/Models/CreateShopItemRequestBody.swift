//
// CreateShopItemRequestBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateShopItemRequestBody: Codable, JSONEncodable, Hashable {

    public var idempotentcyToken: String
    public var caption: String
    public var hashtags: [String]
    public var title: String
    public var price: Double
    public var collaboratorUserIds: [String]
    public var scheduledPublicationTimestamp: Double?
    public var expirationTimestamp: Double?
    public var mediaFiles: [FileDescriptor]
    public var purchasedMediaFiles: [FileDescriptor]

    public init(idempotentcyToken: String, caption: String, hashtags: [String], title: String, price: Double, collaboratorUserIds: [String], scheduledPublicationTimestamp: Double? = nil, expirationTimestamp: Double? = nil, mediaFiles: [FileDescriptor], purchasedMediaFiles: [FileDescriptor]) {
        self.idempotentcyToken = idempotentcyToken
        self.caption = caption
        self.hashtags = hashtags
        self.title = title
        self.price = price
        self.collaboratorUserIds = collaboratorUserIds
        self.scheduledPublicationTimestamp = scheduledPublicationTimestamp
        self.expirationTimestamp = expirationTimestamp
        self.mediaFiles = mediaFiles
        self.purchasedMediaFiles = purchasedMediaFiles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case idempotentcyToken
        case caption
        case hashtags
        case title
        case price
        case collaboratorUserIds
        case scheduledPublicationTimestamp
        case expirationTimestamp
        case mediaFiles
        case purchasedMediaFiles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(idempotentcyToken, forKey: .idempotentcyToken)
        try container.encode(caption, forKey: .caption)
        try container.encode(hashtags, forKey: .hashtags)
        try container.encode(title, forKey: .title)
        try container.encode(price, forKey: .price)
        try container.encode(collaboratorUserIds, forKey: .collaboratorUserIds)
        try container.encodeIfPresent(scheduledPublicationTimestamp, forKey: .scheduledPublicationTimestamp)
        try container.encodeIfPresent(expirationTimestamp, forKey: .expirationTimestamp)
        try container.encode(mediaFiles, forKey: .mediaFiles)
        try container.encode(purchasedMediaFiles, forKey: .purchasedMediaFiles)
    }
}

