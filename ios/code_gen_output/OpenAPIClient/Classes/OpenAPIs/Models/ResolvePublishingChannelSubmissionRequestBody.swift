//
// ResolvePublishingChannelSubmissionRequestBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ResolvePublishingChannelSubmissionRequestBody: Codable, JSONEncodable, Hashable {

    public var decision: PublishingChannelSubmissionDecision
    public var publishingChannelSubmissionId: String
    public var reasonString: String

    public init(decision: PublishingChannelSubmissionDecision, publishingChannelSubmissionId: String, reasonString: String) {
        self.decision = decision
        self.publishingChannelSubmissionId = publishingChannelSubmissionId
        self.reasonString = reasonString
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case decision
        case publishingChannelSubmissionId
        case reasonString
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(decision, forKey: .decision)
        try container.encode(publishingChannelSubmissionId, forKey: .publishingChannelSubmissionId)
        try container.encode(reasonString, forKey: .reasonString)
    }
}

